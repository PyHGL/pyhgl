
from pyhgl.logic import *
from pyhgl.tester import pytest, utils



@conf Global:
    data_width = 8 
    addr_width = 4
    ram_depth = 1 << addr_width

@module Memory:
    io = Bundle(
        addr = UInt[conf.p.addr_width](0) @ Input,
        cs = UInt[1](0) @ Input, 
        we = UInt[1](0) @ Input, 
        oe = UInt[1](0) @ Input, 
        data = Wtri(UInt[conf.p.data_width](0)) @ InOut, 
        data_en = UInt[1](0) @ Input,
        data_in = UInt[conf.p.data_width](0) @ Input,
    ) 

    ram_t = UInt[conf.p.data_width] ** conf.p.ram_depth 
    mem = Mem(ram_t(0))

    when io.cs && io.we:
        mem[io.addr] <== io.data 

    when io.cs && !io.we && io.oe:
        io.data <== mem[io.addr]  
    elsewhen io.data_en:
        io.data <== io.data_in

    print(ram_t._idxes, ram_t._shape)


@pytest test_ram: 
    with Session(conf=Global()) as sess:
        dut = Memory()
        sess.track(dut.io, dut.mem, dut.clock[0]) 

        for i in range(5): 
            setv(dut.io.addr, i)
            setv(dut.io.cs, 1)
            setv(dut.io.we, 1)
            setv(dut.io.oe, 1) 
            setv(dut.io.data_en, 1)
            setv(dut.io.data_in, i*4)

            sess.run(200) 

        sess.emitVCD('target/mem.vcd') 
        sess.emitGraph('target/mem.gv') 

        sess.emitVerilog('target/mem.sv')
        print(sess)