from pyhgl.logic import * 
from pyhgl.tester import tester 

import pyhgl.logic.utils as utils
import random



@tester test_eq_mux: 

    with Session() as sess:
        x = UInt(0, w=4, name='x')
        y = UInt(0, w=5, name='y')
        z = UInt(0, w=6, name='z')

        out_eqx = x == BitPat('b??11')
        out_eqy = y == BitPat('5:?b101') 
        out_oext = x.oext(8)

        out_mux = MuxSeq([[x,y], z], {
            x == 0 : [[1,0],2],
            x == 1 : [[2,1],3],
            x == 2 : [[0,0],5]
        }) 

        for _ in range(100):
            x_ = random.randint(0, 2**4-1) 
            y_ = random.randint(0, 2**5-1)
            z_ = random.randint(0, 2**6-1)

            setv(Bundle(x,y,z), Bundle(x_,y_,z_))

            sess.run(100)  

            tester.EQ += getv(out_eqx), (x_ & 3) == 3 
            tester.EQ += getv(out_eqy), (y_ & 7) == 5 
            tester.EQ += getv(out_oext), x_ | 240

            if x_ == 0:
                tester.EQ += getv(out_mux)._flat, [1,0,2]
            elif x_ == 1:
                tester.EQ += getv(out_mux)._flat, [2,1,3]
            elif x_ == 2:
                tester.EQ += getv(out_mux)._flat, [0,0,5]
            else:
                tester.EQ += getv(out_mux)._flat, [x_,y_,z_]
